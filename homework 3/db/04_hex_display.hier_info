|top
CLK => CLK.IN2
DS_A << hex_display:hexDisp1.segments
DS_B << hex_display:hexDisp1.segments
DS_C << hex_display:hexDisp1.segments
DS_D << hex_display:hexDisp1.segments
DS_E << hex_display:hexDisp1.segments
DS_F << hex_display:hexDisp1.segments
DS_G << hex_display:hexDisp1.segments
DS_EN1 << hex_display:hexDisp1.anodes
DS_EN2 << hex_display:hexDisp1.anodes
DS_EN3 << hex_display:hexDisp1.anodes
DS_EN4 << hex_display:hexDisp1.anodes


|top|clk_div:clkDiv1
clkIn => cnt[0].CLK
clkIn => cnt[1].CLK
clkIn => cnt[2].CLK
clkIn => cnt[3].CLK
clkIn => cnt[4].CLK
clkIn => cnt[5].CLK
clkIn => cnt[6].CLK
clkIn => cnt[7].CLK
clkIn => cnt[8].CLK
clkIn => cnt[9].CLK
clkIn => cnt[10].CLK
clkIn => cnt[11].CLK
clkOut <= cnt[11].DB_MAX_OUTPUT_PORT_TYPE


|top|clk_div:clkDiv2
clkIn => cnt[0].CLK
clkIn => cnt[1].CLK
clkIn => cnt[2].CLK
clkIn => cnt[3].CLK
clkIn => cnt[4].CLK
clkIn => cnt[5].CLK
clkIn => cnt[6].CLK
clkIn => cnt[7].CLK
clkIn => cnt[8].CLK
clkIn => cnt[9].CLK
clkIn => cnt[10].CLK
clkIn => cnt[11].CLK
clkIn => cnt[12].CLK
clkIn => cnt[13].CLK
clkIn => cnt[14].CLK
clkIn => cnt[15].CLK
clkIn => cnt[16].CLK
clkIn => cnt[17].CLK
clkIn => cnt[18].CLK
clkIn => cnt[19].CLK
clkIn => cnt[20].CLK
clkIn => cnt[21].CLK
clkIn => cnt[22].CLK
clkIn => cnt[23].CLK
clkOut <= cnt[23].DB_MAX_OUTPUT_PORT_TYPE


|top|hex_display:hexDisp1
clk => i[0].CLK
clk => i[1].CLK
data[0] => Mux0.IN14
data[1] => Mux1.IN14
data[2] => Mux2.IN14
data[3] => Mux3.IN14
data[4] => Mux0.IN10
data[5] => Mux1.IN10
data[6] => Mux2.IN10
data[7] => Mux3.IN10
data[8] => Mux0.IN6
data[9] => Mux1.IN6
data[10] => Mux2.IN6
data[11] => Mux3.IN6
data[12] => Mux0.IN2
data[13] => Mux1.IN2
data[14] => Mux2.IN2
data[15] => Mux3.IN2
anodes[0] <= ShiftLeft0.DB_MAX_OUTPUT_PORT_TYPE
anodes[1] <= ShiftLeft0.DB_MAX_OUTPUT_PORT_TYPE
anodes[2] <= ShiftLeft0.DB_MAX_OUTPUT_PORT_TYPE
anodes[3] <= ShiftLeft0.DB_MAX_OUTPUT_PORT_TYPE
segments[0] <= hex_to_seg:hex_to_seg.segments
segments[1] <= hex_to_seg:hex_to_seg.segments
segments[2] <= hex_to_seg:hex_to_seg.segments
segments[3] <= hex_to_seg:hex_to_seg.segments
segments[4] <= hex_to_seg:hex_to_seg.segments
segments[5] <= hex_to_seg:hex_to_seg.segments
segments[6] <= hex_to_seg:hex_to_seg.segments


|top|hex_display:hexDisp1|hex_to_seg:hex_to_seg
data[0] => Decoder0.IN3
data[1] => Decoder0.IN2
data[2] => Decoder0.IN1
data[3] => Decoder0.IN0
segments[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
segments[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
segments[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
segments[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
segments[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
segments[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
segments[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|top|rom_fetcher:romFetcher1
clk => rom:rom.clk
clk => address[0].CLK
clk => address[1].CLK
clk => address[2].CLK
clk => address[3].CLK
clk => address[4].CLK
clk => address[5].CLK
clk => address[6].CLK
clk => address[7].CLK
clk => address[8].CLK
clk => address[9].CLK
clk => address[10].CLK
clk => address[11].CLK
clk => address[12].CLK
clk => address[13].CLK
clk => address[14].CLK
clk => address[15].CLK
number[0] <= rom:rom.number[0]
number[1] <= rom:rom.number[1]
number[2] <= rom:rom.number[2]
number[3] <= rom:rom.number[3]
number[4] <= rom:rom.number[4]
number[5] <= rom:rom.number[5]
number[6] <= rom:rom.number[6]
number[7] <= rom:rom.number[7]
number[8] <= rom:rom.number[8]
number[9] <= rom:rom.number[9]
number[10] <= rom:rom.number[10]
number[11] <= rom:rom.number[11]
number[12] <= rom:rom.number[12]
number[13] <= rom:rom.number[13]
number[14] <= rom:rom.number[14]
number[15] <= rom:rom.number[15]


|top|rom_fetcher:romFetcher1|rom:rom
address[0] => mem.RADDR
address[1] => mem.RADDR1
address[2] => mem.RADDR2
address[3] => mem.RADDR3
address[4] => ~NO_FANOUT~
address[5] => ~NO_FANOUT~
address[6] => ~NO_FANOUT~
address[7] => ~NO_FANOUT~
address[8] => ~NO_FANOUT~
address[9] => ~NO_FANOUT~
address[10] => ~NO_FANOUT~
address[11] => ~NO_FANOUT~
address[12] => ~NO_FANOUT~
address[13] => ~NO_FANOUT~
address[14] => ~NO_FANOUT~
address[15] => ~NO_FANOUT~
clk => number[0]~reg0.CLK
clk => number[1]~reg0.CLK
clk => number[2]~reg0.CLK
clk => number[3]~reg0.CLK
clk => number[4]~reg0.CLK
clk => number[5]~reg0.CLK
clk => number[6]~reg0.CLK
clk => number[7]~reg0.CLK
clk => number[8]~reg0.CLK
clk => number[9]~reg0.CLK
clk => number[10]~reg0.CLK
clk => number[11]~reg0.CLK
clk => number[12]~reg0.CLK
clk => number[13]~reg0.CLK
clk => number[14]~reg0.CLK
clk => number[15]~reg0.CLK
number[0] <= number[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
number[1] <= number[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
number[2] <= number[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
number[3] <= number[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
number[4] <= number[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
number[5] <= number[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
number[6] <= number[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
number[7] <= number[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
number[8] <= number[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
number[9] <= number[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
number[10] <= number[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
number[11] <= number[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
number[12] <= number[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
number[13] <= number[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
number[14] <= number[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
number[15] <= number[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE


